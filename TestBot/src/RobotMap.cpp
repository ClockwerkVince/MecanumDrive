// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "Robot.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<frc::SpeedController> RobotMap::baseLeftMotorFront;
std::shared_ptr<frc::SpeedController> RobotMap::baseLeftMotorRear;
std::shared_ptr<frc::SpeedController> RobotMap::baseRightMotorFront;
std::shared_ptr<frc::SpeedController> RobotMap::baseRightMotorRear;
std::shared_ptr<frc::MecanumDrive> RobotMap::baseMecanumDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    baseLeftMotorFront.reset(new frc::VictorSP(0));
    lw->AddActuator("Base", "LeftMotorFront", std::static_pointer_cast<frc::VictorSP>(baseLeftMotorFront));
    
    baseLeftMotorRear.reset(new frc::VictorSP(1));
    lw->AddActuator("Base", "LeftMotorRear", std::static_pointer_cast<frc::VictorSP>(baseLeftMotorRear));
    
    baseRightMotorFront.reset(new frc::VictorSP(2));
    lw->AddActuator("Base", "RightMotorFront", std::static_pointer_cast<frc::VictorSP>(baseRightMotorFront));
    
    baseRightMotorRear.reset(new frc::VictorSP(3));
    lw->AddActuator("Base", "RightMotorRear", std::static_pointer_cast<frc::VictorSP>(baseRightMotorRear));
    
    baseMecanumDrive.reset(new frc::MecanumDrive(*baseLeftMotorFront, *baseLeftMotorRear,
              *baseRightMotorFront, *baseRightMotorRear));
    lw->AddActuator("Base", "MecanumDrive", baseMecanumDrive);
    baseMecanumDrive->SetSafetyEnabled(true);
        baseMecanumDrive->SetExpiration(0.1);
        baseMecanumDrive->SetMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
